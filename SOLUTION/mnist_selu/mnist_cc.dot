digraph "torch-jit-export" {
	graph [bb="0,0,3510.9,306",
		rankdir=LR
	];
	node [label="\N"];
	"Conv_0/Conv (op#0)\n input0 input.1\n input1 conv1.weight\n input2 conv1.bias\n output0 9"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=1.1528,
		pos="278.99,72",
		shape=box,
		style=filled,
		width=2.3333];
	90	 [height=0.5,
		label=9,
		pos="425.99,72",
		shape=octagon,
		width=0.75];
	"Conv_0/Conv (op#0)\n input0 input.1\n input1 conv1.weight\n input2 conv1.bias\n output0 9" -> 90	 [pos="e,398.76,72 363.22,72 372.04,72 380.65,72 388.53,72"];
	"input.10"	 [height=0.5,
		label="input.1",
		pos="79.495,126",
		shape=octagon,
		width=1.3288];
	"input.10" -> "Conv_0/Conv (op#0)\n input0 input.1\n input1 conv1.weight\n input2 conv1.bias\n output0 9"	 [pos="e,194.7,94.817 118.91,115.33 137.89,110.19 161.53,103.79 184.77,97.503"];
	"conv1.weight0"	 [height=0.5,
		label="conv1.weight",
		pos="79.495,72",
		shape=octagon,
		width=2.2082];
	"conv1.weight0" -> "Conv_0/Conv (op#0)\n input0 input.1\n input1 conv1.weight\n input2 conv1.bias\n output0 9"	 [pos="e,194.84,72 159.2,72 167.62,72 176.25,72 184.82,72"];
	"conv1.bias0"	 [height=0.5,
		label="conv1.bias",
		pos="79.495,18",
		shape=octagon,
		width=1.8174];
	"conv1.bias0" -> "Conv_0/Conv (op#0)\n input0 input.1\n input1 conv1.weight\n input2 conv1.bias\n output0 9"	 [pos="e,194.98,49.26 126.27,30.661 143.96,35.451 164.79,41.089 185.28,46.636"];
	"Selu_1/Selu (op#1)\n input0 9\n output0 10"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=0.73611,
		pos="565.99,72",
		shape=box,
		style=filled,
		width=2.1389];
	90 -> "Selu_1/Selu (op#1)\n input0 9\n output0 10"	 [pos="e,488.99,72 453.32,72 460.97,72 469.73,72 478.9,72"];
	100	 [height=0.5,
		label=10,
		pos="758.48,72",
		shape=octagon,
		width=0.75];
	"Selu_1/Selu (op#1)\n input0 9\n output0 10" -> 100	 [pos="e,731.23,72 643.18,72 669.96,72 698.8,72 720.94,72"];
	"Conv_2/Conv (op#2)\n input0 10\n input1 conv2.weight\n input2 conv2.bias\n output0 11"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=1.1528,
		pos="957.98,126",
		shape=box,
		style=filled,
		width=2.3333];
	100 -> "Conv_2/Conv (op#2)\n input0 10\n input1 conv2.weight\n input2 conv2.bias\n output0 11"	 [pos="e,873.66,103.18 785.8,79.395 806.14,84.899 835.18,92.76 863.64,100.46"];
	110	 [height=0.5,
		label=11,
		pos="1105,126",
		shape=octagon,
		width=0.75];
	"Conv_2/Conv (op#2)\n input0 10\n input1 conv2.weight\n input2 conv2.bias\n output0 11" -> 110	 [pos="e,1077.8,126 1042.2,126 1051,126 1059.6,126 1067.5,126"];
	"conv2.weight0"	 [height=0.5,
		label="conv2.weight",
		pos="758.48,180",
		shape=octagon,
		width=2.2082];
	"conv2.weight0" -> "Conv_2/Conv (op#2)\n input0 10\n input1 conv2.weight\n input2 conv2.bias\n output0 11"	 [pos="e,873.89,148.76 809.86,166.09 826.47,161.6 845.45,156.46 864.15,151.4"];
	"conv2.bias0"	 [height=0.5,
		label="conv2.bias",
		pos="758.48,126",
		shape=octagon,
		width=1.8174];
	"conv2.bias0" -> "Conv_2/Conv (op#2)\n input0 10\n input1 conv2.weight\n input2 conv2.bias\n output0 11"	 [pos="e,873.82,126 824.08,126 836.75,126 850.26,126 863.63,126"];
	"Selu_3/Selu (op#3)\n input0 11\n output0 12"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=0.73611,
		pos="1245,126",
		shape=box,
		style=filled,
		width=2.1389];
	110 -> "Selu_3/Selu (op#3)\n input0 11\n output0 12"	 [pos="e,1168,126 1132.3,126 1140,126 1148.7,126 1157.9,126"];
	120	 [height=0.5,
		label=12,
		pos="1385,126",
		shape=octagon,
		width=0.75];
	"Selu_3/Selu (op#3)\n input0 11\n output0 12" -> 120	 [pos="e,1358,126 1322.3,126 1331.2,126 1340,126 1347.9,126"];
	"MaxPool_4/MaxPool (op#4)\n input0 12\n output0 13"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=0.73611,
		pos="1554,126",
		shape=box,
		style=filled,
		width=2.9444];
	120 -> "MaxPool_4/MaxPool (op#4)\n input0 12\n output0 13"	 [pos="e,1447.9,126 1412.1,126 1419.7,126 1428.4,126 1437.6,126"];
	130	 [height=0.5,
		label=13,
		pos="1723,126",
		shape=octagon,
		width=0.75];
	"MaxPool_4/MaxPool (op#4)\n input0 12\n output0 13" -> 130	 [pos="e,1695.8,126 1660,126 1669.1,126 1677.8,126 1685.6,126"];
	"Flatten_5/Flatten (op#5)\n input0 13\n output0 14"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=0.73611,
		pos="1883,126",
		shape=box,
		style=filled,
		width=2.6944];
	130 -> "Flatten_5/Flatten (op#5)\n input0 13\n output0 14"	 [pos="e,1785.7,126 1750.1,126 1757.7,126 1766.3,126 1775.5,126"];
	140	 [height=0.5,
		label=14,
		pos="2080.7,126",
		shape=octagon,
		width=0.75];
	"Flatten_5/Flatten (op#5)\n input0 13\n output0 14" -> 140	 [pos="e,2053.5,126 1980.1,126 2002.6,126 2025.3,126 2043.4,126"];
	"Gemm_6/Gemm (op#6)\n input0 14\n input1 fc1.weight\n input2 fc1.bias\n output0 15"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=1.1528,
		pos="2273.4,180",
		shape=box,
		style=filled,
		width=2.5556];
	140 -> "Gemm_6/Gemm (op#6)\n input0 14\n input1 fc1.weight\n input2 fc1.bias\n output0 15"	 [pos="e,2181,154.11 2107.9,133.62 2124.9,138.38 2147.9,144.82 2171.3,151.39"];
	150	 [height=0.5,
		label=15,
		pos="2428.4,180",
		shape=octagon,
		width=0.75];
	"Gemm_6/Gemm (op#6)\n input0 14\n input1 fc1.weight\n input2 fc1.bias\n output0 15" -> 150	 [pos="e,2401.2,180 2365.8,180 2374.6,180 2383.2,180 2391,180"];
	"fc1.weight0"	 [height=0.5,
		label="fc1.weight",
		pos="2080.7,234",
		shape=octagon,
		width=1.7978];
	"fc1.weight0" -> "Gemm_6/Gemm (op#6)\n input0 14\n input1 fc1.weight\n input2 fc1.bias\n output0 15"	 [pos="e,2181.1,205.87 2126.4,221.2 2140,217.38 2155.6,213.03 2171.3,208.62"];
	"fc1.bias0"	 [height=0.5,
		label="fc1.bias",
		pos="2080.7,180",
		shape=octagon,
		width=1.4265];
	"fc1.bias0" -> "Gemm_6/Gemm (op#6)\n input0 14\n input1 fc1.weight\n input2 fc1.bias\n output0 15"	 [pos="e,2181.2,180 2132.1,180 2144.2,180 2157.5,180 2170.9,180"];
	"Relu_7/Relu (op#7)\n input0 15\n output0 16"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=0.73611,
		pos="2568.9,180",
		shape=box,
		style=filled,
		width=2.1528];
	150 -> "Relu_7/Relu (op#7)\n input0 15\n output0 16"	 [pos="e,2491.3,180 2455.5,180 2463.2,180 2472,180 2481.2,180"];
	160	 [height=0.5,
		label=16,
		pos="2747.1,180",
		shape=octagon,
		width=0.75];
	"Relu_7/Relu (op#7)\n input0 15\n output0 16" -> 160	 [pos="e,2720.1,180 2646.6,180 2668.6,180 2691.6,180 2710.1,180"];
	"Gemm_8/Gemm (op#8)\n input0 16\n input1 fc2.weight\n input2 fc2.bias\n output0 17"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=1.1528,
		pos="2939.9,234",
		shape=box,
		style=filled,
		width=2.5556];
	160 -> "Gemm_8/Gemm (op#8)\n input0 16\n input1 fc2.weight\n input2 fc2.bias\n output0 17"	 [pos="e,2847.5,208.11 2774.3,187.62 2791.3,192.38 2814.3,198.82 2837.8,205.39"];
	170	 [height=0.5,
		label=17,
		pos="3094.9,234",
		shape=octagon,
		width=0.75];
	"Gemm_8/Gemm (op#8)\n input0 16\n input1 fc2.weight\n input2 fc2.bias\n output0 17" -> 170	 [pos="e,3067.6,234 3032.3,234 3041.1,234 3049.6,234 3057.5,234"];
	"fc2.weight0"	 [height=0.5,
		label="fc2.weight",
		pos="2747.1,288",
		shape=octagon,
		width=1.7978];
	"fc2.weight0" -> "Gemm_8/Gemm (op#8)\n input0 16\n input1 fc2.weight\n input2 fc2.bias\n output0 17"	 [pos="e,2847.6,259.87 2792.8,275.2 2806.5,271.38 2822,267.03 2837.7,262.62"];
	"fc2.bias0"	 [height=0.5,
		label="fc2.bias",
		pos="2747.1,234",
		shape=octagon,
		width=1.4265];
	"fc2.bias0" -> "Gemm_8/Gemm (op#8)\n input0 16\n input1 fc2.weight\n input2 fc2.bias\n output0 17"	 [pos="e,2847.7,234 2798.5,234 2810.6,234 2823.9,234 2837.4,234"];
	"LogSoftmax_9/LogSoftmax (op#9)\n input0 17\n output0 18"	 [URL="javascript:alert('')",
		color="#0F9D58",
		fontcolor="#FFFFFF",
		height=0.73611,
		pos="3289.4,234",
		shape=box,
		style=filled,
		width=3.6528];
	170 -> "LogSoftmax_9/LogSoftmax (op#9)\n input0 17\n output0 18"	 [pos="e,3157.6,234 3121.9,234 3129.4,234 3138.1,234 3147.6,234"];
	180	 [height=0.5,
		label=18,
		pos="3483.9,234",
		shape=octagon,
		width=0.75];
	"LogSoftmax_9/LogSoftmax (op#9)\n input0 17\n output0 18" -> 180	 [pos="e,3456.8,234 3421,234 3430.1,234 3438.8,234 3446.7,234"];
}
